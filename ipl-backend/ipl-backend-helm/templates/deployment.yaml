apiVersion: apps/v1
kind: Deployment
metadata:
  name: ipl-backend-deployment
  labels:
    app: ipl-backend-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: ipl-backend-deployment
      service: ipl-backend-deployment
  template: # this part under the template applies to pod
    metadata:
      name: ipl-backend-deployment
      labels:
        app: ipl-backend-deployment
        service: ipl-backend-deployment
    spec:
      imagePullSecrets: {{ .Values.imagePullSecrets }}
      containers:
        - name: ipl-backend-deployment
          securityContext: {}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
#          livenessProbe:
#            failureThreshold: 10
#            httpGet:
#              path: /actuator/health
#              port: 8081
#            initialDelaySeconds: 30
#          readinessProbe:
#            failureThreshold: 10
#            httpGet:
#              path: /actuator/health
#              port: 8081
#            initialDelaySeconds: 30
          resources: {}
          volumeMounts: {{ .Values.volumeMounts }}
      volumes: []
      nodeSelector: {}
      affinity: {}
      tolerations: []
